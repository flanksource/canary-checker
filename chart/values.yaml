# yaml-language-server: $schema=values.schema.json

# @schema
# required: false
# additionalProperties: true
# @schema
global:
  # @schema
  # required: false
  # @schema
  imageRegistry: docker.io
  # @schema
  # required: false
  # @schema
  imagePrefix: flanksource
  # @schema
  # required: false
  # additionalProperties: true
  # @schema
  labels: {}
  # @schema
  # required: false
  # additionalProperties: true
  # @schema
  # @ignored
  db:
    # @schema
    # required: false
    # additionalProperties: true
    # @schema
    # @ignored
    connectionPooler:
      # @schema
      # required: false
      # @schema
      enabled: false
      # @schema
      # required: false
      # additionalProperties: true
      # @schema
      # @ignored
      secretKeyRef:
        name: mission-control-connection-pooler
        key: DB_URL

  # @schema
  # additionalProperties: true
  # required: false
  # @schema
  podAnnotations: {}

  # @schema
  # required: false
  # additionalProperties: true
  # type: object
  # @schema
  # -- node's labels for the pod to be scheduled on that node. See [Node Selector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/)
  nodeSelector: {}

  # @schema
  # required: false
  # type: array
  # items:
  #   $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration
  # @schema
  tolerations: []

  # @schema
  # required: false
  # $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
  # @schema
  affinity: {}
# @schema
# default: 1
# @schema
replicas: 1

image:
  name: "{{.Values.global.imagePrefix}}/canary-checker"
  # @schema
  # enum:
  # - full
  # - minimal
  # @schema
  # -- full image is larger and requires more permissions to run, but is required to execute 3rd party checks (jmeter, restic, k6 etc)
  type: minimal
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# @schema
# required: false
# @schema
dockerSocket: false
# @schema
# required: false
# @schema
containerdSocket: false

# @schema
# required: false
# @schema
# --  Disable the embedded postgrest service
disablePostgrest: false

# @schema
# required: false
# @schema
# --  Set to true to enable prometheus service monitor
serviceMonitor: false
# @schema
# required: false
# additionalProperties: true
# @schema
serviceMonitorLabels: {}

# @schema
# required: false
# @schema
grafanaDashboards: false

# @schema
# required: false
# @schema
# -- Turn on pprof /debug endpoint
debug: false

# @schema
# required: false
# @schema
logLevel: ""

# @schema
# required: false
# @schema
jsonLogs: true

# @schema
# required: false
# @schema
# -- restrict canary-checker to monitor single namespace for canaries. Leave blank to monitor all namespaces
canaryNamespace: ""

# @schema
# required: false
# @schema
# Only canaries matching these namespaces will run.
# A list of namespaces can be provided with comma separation.
# Supports [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canaryNamespaceSelector: ""

# @schema
# required: false
# @schema
# Only canaries matching these names will run.
# A list of names can be provided with comma separation.
# Supports [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canarySelector: ""

# @schema
# required: false
# @schema
# Only canaries matching these labels will run.
# Label values support [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canaryLabelSelector: ""

# @schema
# required: false
# @schema
otel:
  # -- OpenTelemetry gRPC collector endpoint in host:port format
  collector: ""
  serviceName: canary-checker
  # -- labels in "a=b,c=d" format
  # @schema
  # required: false
  # @schema
  labels: ""

# @schema
# required: false
# @schema
db:
  # @schema
  # required: false
  # @schema
  runMigrations: true
  embedded:
    # -- persist the embedded DB with a PVC
    persist: false
    # @schema
    # required: false
    # @schema
    storageClass: ""
    # @schema
    # required: false
    # @schema
    storage: 20Gi
  # @schema
  # required: false
  # @schema
  external:
    # -- Setting to true will disable the embedded DB
    enabled: false
    # Setting create to true will create a postgres stateful set for config-db to connect to.
    # If create=true, the secretKeyRef will be created by helm with the specified name and key
    #   Optionally populate a secret named 'postgres-connection' before install with `POSTGRES_USER` and `POSTGRES_PASSWORD` to set the created username and password, otherwise a random password will be created for a 'postgres' user
    # -- If false and an existing connection must be specified under secretKeyRef
    # If create=false, a prexisting secret containing the URI to an existing postgres database must be provided
    #   The URI must be in the format `postgresql://$user:$password@$host/$database`
    create: false
    secretKeyRef:
      name: canary-checker-postgres
      # This is the key that either the secret will create(if create is true) or
      # this is the key it will look for in the secret(if secretRefKey is
      # mentioned). The name of the key is mandatory to set.
      key: DB_URL
    storageClass: ""
    storage: 20Gi

# @schema
# required: false
# @schema
nameOverride: ""

# @schema
# enum:
#  - privileged
#  - unprivileged
#  - none
# @schema
# -- set the mechanism for pings - either privileged, unprivileged or none
pingMode: "unprivileged"
# @schema
# required: false
# @schema
allowPrivilegeEscalation: false

# @schema
# type: array
# required: false
# @schema
# -- List of additional check label keys that should be included in the check metrics
labelsAllowList: []

# @schema
# required: false
# @schema
# -- Default Prometheus URL to use in prometheus checks
prometheusURL: ""

# @schema
# required: false
# @schema
upstream:
  enabled: false
  agentName: ""
  host: ""
  user: ""
  password: ""
  insecureSkipVerify: false
  # -- Alternative to inlining values, secret must contain: AGENT_NAME, UPSTREAM_USER, UPSTREAM_PASSWORD & UPSTREAM_HOST
  # @schema
  # required: false
  # @schema
  secretKeyRef:
    # @schema
    # required: false
    # @schema
    name:

# @schema
# required: false
# @schema
ingress:
  # @schema
  # required: false
  # @schema
  # -- Expose the canary-checker service on an ingress, normally not needed as the service is exposed through `flanksource-ui.ingress`
  enabled: false
  # @schema
  # required: false
  # @schema
  className: ""
  # @schema
  # required: false
  # additionalProperties: true
  # @schema
  annotations: {}
  # @schema
  # required: false
  # default: canary-checker
  # @schema
  host: canary-checker
  # @schema
  # required: false
  # @schema
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# @schema
# required: false
# $ref: https://raw.githubusercontent.com/flanksource/flanksource-ui/main/chart/values.schema.deref.json
# additionalProperties: true
# @schema
flanksource-ui:
  # @schema
  # required: false
  # default: true
  # @schema
  enabled: true
  # @schema
  # required: false
  # @schema
  # @ignored
  nameOverride: "canary-checker-ui"
  # @schema
  # required: false
  # @schema
  # @ignored
  oryKratosURL: ""
  # @schema
  # $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
  # @schema
  image:
    name: "{{.Values.global.imagePrefix}}/canary-checker-ui"
  # @schema
  # $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
  # @schema
  resources:
    requests:
      cpu: 10m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 512Mi
  # @schema
  # required: false
  # @schema
  backendURL: "http://canary-checker:8080"
  ingress:
    # @schema
    # required: false
    # default: true
    # @schema
    enabled: true
    # @schema
    # required: false
    # default: canary-checker-ui.local
    # @schema
    host: "canary-checker-ui.local"
    # @schema
    # required: false
    # additionalProperties: true
    # @schema
    annotations: {}
    # @schema
    # required: false
    # @schema
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

# @schema
# $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
# @schema
resources:
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    memory: 2Gi

# @schema
# required: false
# @schema
serviceAccount:
  # @schema
  # required: false
  # default: canary-checker-sa
  # @schema
  name: canary-checker-sa

  # @schema
  # additionalProperties: true
  # required: false
  # @schema
  annotations: {}

  # @schema
  # required: false
  # @schema
  rbac:
    #
    # @schema
    # required: false
    # default: true
    # @schema
    # -- Install (Cluster)Role and RoleBinding for the ServiceAccount
    enabled: true

    # @schema
    # required: false
    # default: true
    # @schema
    # -- whether to create cluster-wide or namespaced roles
    clusterRole: true

    # --  for secret management with valueFrom
    tokenRequest: true
    # --  for secret management with valueFrom
    secrets: true
    # --  for secret management with valueFrom
    configmaps: true

    # --  for use with kubernetes resource lookups
    readAll: true

    # -- for pod and junit canaries
    podsCreateAndDelete: true
    # to collect logs and output from pod and junit canaries
    exec: true

    # -- for pod canary
    ingressCreateAndDelete: true

    # -- for namespace canary
    namespaceCreateAndDelete: true

    # @schema
    # required: false
    # default: []
    # type: array
    # items:
    #   type: object
    # @schema
    extra: []

# @schema
# type: array
# required: false
# @schema
# -- List of check types to disable
disableChecks: []

# @schema
# additionalProperties: true
# @schema
# -- A map of properties to update on startup
properties: {}

# @schema
# additionalProperties: true
# @schema
extraArgs:
  # default-window: 1h

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
extra: {}

# @schema
# additionalProperties: true
# required: false
# @schema
podAnnotations: {}

# @schema
# required: false
# type: array
# items:
#   $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Volume
# @schema
volumes: []

# @schema
# required: false
# type: array
# items:
#   $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount
# @schema
volumeMounts: []

# @schema
# required: false
# additionalProperties: true
# type: object
# @schema
# -- node's labels for the pod to be scheduled on that node. See [Node Selector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/)
nodeSelector: {}

# @schema
# required: false
# type: array
# items:
#   $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration
# @schema
tolerations: []

# @schema
# required: false
# $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
# @schema
affinity: {}

# @schema
# required: false
# $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe
# @schema
livenessProbe:
  httpGet:
    path: /health
    port: 8080

# @schema
# required: false
# $ref: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe
# @schema
readinessProbe:
  failureThreshold: 6
  timeoutSeconds: 30
  httpGet:
    path: /health
    port: 8080
