# Default values for canary-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: docker.io
  imagePrefix: flanksource
  labels: {}
  db:
    connectionPooler:
      enabled: false
      secretKeyRef:
        name: mission-control-connection-pooler
        key: DB_URL

replicas: 1

image:
  name: "{{.Values.global.imagePrefix}}/canary-checker"
  ## Options: minimal | full
  ## full image is larger and requires more permissions to run, but is required to execute 3rd party checks (jmeter, restic, k6 etc)
  type: minimal
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

dockerSocket: false
containerdSocket: false

# Set to true if you want to disable the postgrest service
disablePostgrest: false

# Set to true to enable prometheus service monitor
serviceMonitor: false
grafanaDashboards: false

# Turn on pprof /debug endpoint
debug: false

# -v, -vv, -vvv
logLevel: ""
jsonLogs: true

# restrict canary-checker to monitor single namespace for canaries. Leave blank to monitor all namespaces
canaryNamespace: ""

# Only canaries matching these namespaces will run.
# A list of namespaces can be provided with comma separation.
# Supports [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canaryNamespaceSelector: ""

# Only canaries matching these names will run.
# A list of names can be provided with comma separation.
# Supports [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canarySelector: ""

# Only canaries matching these labels will run.
# Label values support [match expression](https://docs.flanksource.com/reference/types/#match-pattern)
canaryLabelSelector: ""

otel:
  # OpenTelemetry gRPC collector endpoint in host:port format
  collector: ""
  serviceName: canary-checker
  # labels in "a=b,c=d" format
  labels: ""

db:
  runMigrations: true
  embedded:
    # If the database is embedded, setting this to true will persist the contents of the database
    # through a persistent volume
    persist: false
    storageClass: ""
    storage: 20Gi
  external:
    # Setting enabled to true will use a external postgres DB, disabling the embedded DB
    enabled: false
    # Setting create to true will create a postgres stateful set for config-db to connect to.
    # If create=true, the secretKeyRef will be created by helm with the specified name and key
    #   Optionally populate a secret named 'postgres-connection' before install with POSTGRES_USER and POSTGRES_PASSWORD to set the created username and password, otherwise a random password will be created for a 'postgres' user
    # If create=false, a prexisting secret containing the URI to an existing postgres database must be provided
    #   The URI must be in the format 'postgresql://"$user":"$password"@"$host"/"$database"'
    # Setting this to true will provision a new postgress DB for you
    create: false
    secretKeyRef:
      name: canary-checker-postgres
      # This is the key that either the secret will create(if create is true) or
      # this is the key it will look for in the secret(if secretRefKey is
      # mentioned). The name of the key is mandatory to set.
      key: DB_URL
    storageClass: ""
    storage: 20Gi

nameOverride: ""

# set the mechanism for pings - either privileged, privileged or none
pingMode: "unprivileged"
allowPrivilegeEscalation: false

# Prometheus URL
prometheusURL: ""

data:
  defaultSearchWindow: 1h
  checkStatusRetentionDays: 180
  checkRetentionDays: 7
  canaryRetentionDays: 7

upstream:
  enabled: false
  agentName: ""
  host: ""
  user: ""
  password: ""
  insecureSkipVerify: false
  # Alternative to inlining values, secret must contain: AGENT_NAME, UPSTREAM_USER, UPSTREAM_PASSWORD & UPSTREAM_HOST
  secretKeyRef:
    name:

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: canary-checker
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

flanksource-ui:
  enabled: true
  nameOverride: "canary-checker-ui"
  fullnameOverride: "canary-checker-ui"
  oryKratosURL: ""
  resources:
    requests:
      cpu: 10m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 512Mi
  backendURL: "http://canary-checker:8080"
  ingress:
    enabled: true
    host: "canary-checker-ui.local"
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    memory: 2Gi

serviceAccount:
  name: canary-checker-sa
  # Configures extra annotations on the service account
  # annotations:
  #   some: annotation
  rbac:
    # When set to false will not install Roles & Bindings.
    enable: true

    # Whether to create cluster-wide or namespaced roles
    clusterRole: true

    # for secret management with valueFrom
    tokenRequest: true
    secrets: true
    configmaps: true

    # for use with kubernetes resource lookups
    readAll: true

    # for pod and junit canaries
    podsCreateAndDelete: true
    exec: true

    # for pod canary
    ingressCreateAndDelete: true

    # for namespace canary
    namespaceCreateAndDelete: true

disableChecks: {}

# a list of properties to update on startup
properties: {}

# @schema
# required: false
# additionalProperties: true
# type: object
# @schema
podAnnotations: {}

# a map of extra arguments to the canary-checker cli
extraArgs: {}
extra:
  # nodeSelector:
  #   key: value
  # tolerations:
  #   - key: "key1"
  #     operator: "Equal"
  #     value: "value1"
  #     effect: "NoSchedule"
  # affinity:
  #   nodeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: kubernetes.io/e2e-az-name
  #             operator: In
  #             values:
  #             - e2e-az1
  #             - e2e-az2
