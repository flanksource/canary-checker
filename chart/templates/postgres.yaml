{{- if eq .Values.db.enabled true }}

---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
spec:
  serviceName: postgresql
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:14
        volumeMounts:
          - name: postgresql
            mountPath: /data
        envFrom:
          - secretRef:
              name: {{ .Values.db.secretKeyRef.name }}
    volumeClaimTemplates:
    - metadata:
        name: postgresql
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.db.storageClass }}
        resources:
          requests:
            storage: {{ .Values.db.storage }}

---

# PostgreSQL StatefulSet Service
apiVersion: v1
kind: Service
  metadata:
    name: postgres
spec:
  selector:
    app: postgresql
  ports:
  - port: 5432
    targetPort: 5432

---

{{- if .Values.db.secretKeyRef.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.db.secretKeyRef.name }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  {{ $releaseNamespace :=  }}
  {{- $secretObj := ( lookup "v1" "Secret" .Release.Namespace "postgres-connection" ) }}
  {{- $secretData := ( get $secretObj "data" ) }}
  {{- $user := (( get $secretData "POSTGRES_USER" ) | b64dec ) | default "postgres" }}
  {{- $password := (( get $secretData "POSTGRES_PASSWORD" ) | b64dec ) | default randAlphaNum 32 }}
  {{- $host := print "postgres." .Release.Namespace  ".svc.cluster.local:5432" }}
  {{- $url := print "postgresql://" $user ":" $password "@" $host }}
  {{- $canaryCheckerUrl := ( get $secretData .Values.db.secretKeyRef.key ) | default ( print $url "/canary-checker" ) }}
  
  POSTGRES_USER: {{ $user | quote }}
  POSTGRES_PASSWORD: {{ $password | quote }}
  POSTGRES_HOST: {{ $host | quote }}
  {{ .Values.db.secretKeyRef.key }}: {{ $canaryCheckerUrl | quote }}

{{- end }}

---

{{- end }}
