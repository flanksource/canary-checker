apiVersion: apps/v1
{{- if and (eq .Values.db.external.enabled false) ( eq .Values.db.embedded.persist true) }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "canary-checker.name" . }}
  labels:
    {{- include "canary-checker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "canary-checker.selectorLabels" . | nindent 6 }}
  {{- if eq .Values.db.external.enabled false }}
  {{- if eq .Values.db.embedded.persist true }}
  serviceName: {{ include "canary-checker.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: canarychecker-database
        labels:
          {{- include "canary-checker.labels" . | nindent 10 }}
      spec:
        storageClassName: {{ .Values.db.embedded.storageClass }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.db.embedded.storage }}
  {{- end }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "canary-checker.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "canary-checker.fullname" . }}-sa
      volumes:
        {{- if eq .Values.dockerSocket true }}
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        {{- end }}
        {{- if eq .Values.containerdSocket true }}
        - name: containerdsock
          hostPath:
            path: /run/containerd/containerd.sock
        {{- end }}
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
        - name: config
          configMap:
            name: {{ include "canary-checker.name" . }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: {{ include "canary-checker.name" . }}
          securityContext:
            allowPrivilegeEscalation: {{.Values.allowPrivilegeEscalation}}
            capabilities:
              add:
                - CAP_NET_RAW
          image: {{ include "canary-checker.imageString" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            {{- if eq .Values.debug true }}
            - name: DEBUG
              value: "true"
            {{- end }}
            - name: DOCKER_API_VERSION
              value: "1.39"
            - name: DB_URL
              {{- if eq .Values.db.external.enabled true }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.external.secretKeyRef.name  }}
                  key: {{ .Values.db.external.secretKeyRef.key }}
              {{- else }}
              value: "embedded:///opt/database/"
              {{- end }}
          {{- if .Values.upstream.enabled }}
          envFrom:
            - secretRef:
                name: {{ include "canary-checker.name" . }}
          {{- end }}
          volumeMounts:
            {{- if eq .Values.dockerSocket true }}
            - name: dockersock
              mountPath: "/var/run/docker.sock"
            {{- end }}
            {{- if eq .Values.containerdSocket true }}
            - name: containerdsock
              mountPath: "/run/containerd/containerd.sock"
            {{- end }}
            {{- if eq .Values.db.external.enabled false }}
            {{- if eq .Values.db.embedded.persist true }}
            - name: canarychecker-database
              mountPath: "/opt/database"
            {{- end }}
            {{- end }}
            - mountPath: /etc/podinfo
              name: podinfo
            - mountPath: /app/canary-checker.properties
              name: config
              subpath: canary-checker.properties
          command:
            - /app/canary-checker
          args:
            - operator
            - {{ .Values.logLevel}}
            - --httpPort
            - "8080"
            - --disable-postgrest={{ .Values.disablePostgrest }}
            - --db-migrations={{ .Values.db.runMigrations }}
            - --cache-timeout={{ .Values.data.cacheTimeoutDays }}
            - --default-window={{ .Values.data.defaultSearchWindow }}
            - --check-status-retention-period={{ .Values.data.checkStatusRetentionDays }}
            - --check-retention-period={{ .Values.data.checkRetentionDays }}
            - --canary-retention-period={{ .Values.data.canaryRetentionDays }}
            {{- if ne .Values.canaryNamespace "" }}
            - --namespace={{ .Values.canaryNamespace }}
            {{- end }}
            {{- if gt (int .Values.replicas) 1 }}
            - --enable-leader-election=true
            {{- end }}
            {{- if .Values.upstream.enabled }}
            - --agent-name={{ .Values.upstream.agentName }}
            - --upstream-host={{ .Values.upstream.host }}
            - --upstream-user=$UPSTREAM_USER
            - --upstream-password=$UPSTREAM_PASSWORD
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
      {{- with .Values.extra }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
