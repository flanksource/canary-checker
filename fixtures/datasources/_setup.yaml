apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
  namespace: default
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_SECRET_ACCESS_KEY: minio123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgresdb
            - name: POSTGRES_USER
              value: postgresadmin
            - name: POSTGRES_PASSWORD
              value: admin123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: mysqldb
            - name: MYSQL_USER
              value: mysqladmin
            - name: MYSQL_PASSWORD
              value: admin123
            - name: MYSQL_ROOT_PASSWORD
              value: "s3cur2root"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: default
spec:
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mssql
  name: mssql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
        - image: mcr.microsoft.com/mssql/server:2019-latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 1433
          name: mssql
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: "S0m3p@sswd"

---
apiVersion: v1
kind: Service
metadata:
  name: mssql
  namespace: default
spec:
  ports:
    - name: mssql
      port: 1433
      targetPort: 1433
      protocol: TCP
  selector:
    app: mssql

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
spec:
  ports:
    - name: psql
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: mongoadmin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: secret
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: default
spec:
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app: mongo
---
apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podinfo
  namespace: default
spec:
  minReadySeconds: 3
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: podinfo
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9797"
      labels:
        app: podinfo
    spec:
      containers:
        - name: podinfod
          image: ghcr.io/stefanprodan/podinfo:5.1.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
            - name: http-metrics
              containerPort: 9797
              protocol: TCP
            - name: grpc
              containerPort: 9999
              protocol: TCP
          command:
            - ./podinfo
            - --port=9898
            - --port-metrics=9797
            - --grpc-port=9999
            - --grpc-service-name=podinfo
            - --level=info
            - --random-delay=false
            - --random-error=false
          env:
            - name: PODINFO_UI_COLOR
              value: "#34577c"
          livenessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:9898/healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:9898/readyz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 2000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  name: podinfo
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: podinfo
  ports:
    - name: http
      port: 9898
      protocol: TCP
      targetPort: http
    - port: 9999
      targetPort: grpc
      protocol: TCP
      name: grpc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: podinfo-ing
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/client_max_body_size: "64m"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/tls-acme: "true"
spec:
  rules:
    - host: podinfo.127.0.0.1.nip.io
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: podinfo
                port:
                  number: 9898
---
apiVersion: v1
kind: Secret
metadata:
  name: podinfo-header
  namespace: default
type: Opaque
data:
  value: Zm9v

---
apiVersion: v1
data:
  sampleTest.jmx:
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jmeterTestPlan version=\"1.2\"
    properties=\"5.0\" jmeter=\"5.4.1\">\n  <hashTree>\n    <TestPlan guiclass=\"TestPlanGui\"
    testclass=\"TestPlan\" testname=\"build-web-test-plan\" enabled=\"true\">\n      <stringProp
    name=\"TestPlan.comments\"></stringProp>\n      <boolProp name=\"TestPlan.functional_mode\">false</boolProp>\n
    \     <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>\n      <elementProp
    name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\"
    testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n
    \       <collectionProp name=\"Arguments.arguments\"/>\n      </elementProp>\n
    \     <stringProp name=\"TestPlan.user_define_classpath\"></stringProp>\n    </TestPlan>\n
    \   <hashTree>\n      <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\"
    testname=\"Scenario 1\" enabled=\"true\">\n        <stringProp name=\"ThreadGroup.on_sample_error\">continue</stringProp>\n
    \       <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\"
    guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\"
    enabled=\"true\">\n          <boolProp name=\"LoopController.continue_forever\">false</boolProp>\n
    \         <stringProp name=\"LoopController.loops\">1</stringProp>\n        </elementProp>\n
    \       <stringProp name=\"ThreadGroup.num_threads\">1</stringProp>\n        <stringProp
    name=\"ThreadGroup.ramp_time\">1</stringProp>\n        <longProp name=\"ThreadGroup.start_time\">1373789594000</longProp>\n
    \       <longProp name=\"ThreadGroup.end_time\">1373789594000</longProp>\n        <boolProp
    name=\"ThreadGroup.scheduler\">true</boolProp>\n        <stringProp name=\"ThreadGroup.duration\">60</stringProp>\n
    \       <stringProp name=\"ThreadGroup.delay\">5</stringProp>\n        <stringProp
    name=\"TestPlan.comments\">Virtual Users Running Scenario 1. \nMake test last
    1 minute (see Scheduler)</stringProp>\n        <boolProp name=\"ThreadGroup.same_user_on_next_iteration\">true</boolProp>\n
    \     </ThreadGroup>\n      <hashTree>\n        <ConfigTestElement guiclass=\"HttpDefaultsGui\"
    testclass=\"ConfigTestElement\" testname=\"HTTP Request Defaults\" enabled=\"true\">\n
    \         <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\"
    guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined
    Variables\" enabled=\"true\">\n            <collectionProp name=\"Arguments.arguments\"/>\n
    \         </elementProp>\n          <stringProp name=\"HTTPSampler.domain\">jmeter.apache.org</stringProp>\n
    \         <stringProp name=\"HTTPSampler.port\">443</stringProp>\n          <stringProp
    name=\"HTTPSampler.protocol\">https</stringProp>\n          <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n
    \         <stringProp name=\"HTTPSampler.path\"></stringProp>\n          <stringProp
    name=\"TestPlan.comments\">Notice Timeouts:\nRead to 30s\nConnect to 5s</stringProp>\n
    \         <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n          <stringProp
    name=\"HTTPSampler.connect_timeout\">5000</stringProp>\n          <stringProp
    name=\"HTTPSampler.response_timeout\">30000</stringProp>\n        </ConfigTestElement>\n
    \       <hashTree/>\n        <CookieManager guiclass=\"CookiePanel\" testclass=\"CookieManager\"
    testname=\"HTTP Cookie Manager\" enabled=\"true\">\n          <collectionProp
    name=\"CookieManager.cookies\"/>\n          <boolProp name=\"CookieManager.clearEachIteration\">false</boolProp>\n
    \         <boolProp name=\"CookieManager.controlledByThreadGroup\">true</boolProp>\n
    \       </CookieManager>\n        <hashTree/>\n        <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\"
    testclass=\"HTTPSamplerProxy\" testname=\"Home Page\" enabled=\"true\">\n          <elementProp
    name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\"
    testclass=\"Arguments\" testname=\"Variables pré-définies\" enabled=\"true\">\n
    \           <collectionProp name=\"Arguments.arguments\"/>\n          </elementProp>\n
    \         <stringProp name=\"HTTPSampler.domain\">jmeter.apache.org</stringProp>\n
    \         <stringProp name=\"HTTPSampler.port\">443</stringProp>\n          <stringProp
    name=\"HTTPSampler.protocol\">https</stringProp>\n          <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n
    \         <stringProp name=\"HTTPSampler.path\">/</stringProp>\n          <stringProp
    name=\"HTTPSampler.method\">GET</stringProp>\n          <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n
    \         <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n          <boolProp
    name=\"HTTPSampler.use_keepalive\">true</boolProp>\n          <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n
    \         <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n          <stringProp
    name=\"HTTPSampler.connect_timeout\"></stringProp>\n          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n
    \       </HTTPSamplerProxy>\n        <hashTree>\n          <ResponseAssertion
    guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assertion\"
    enabled=\"true\">\n            <collectionProp name=\"Asserion.test_strings\">\n
    \             <stringProp name=\"49586\">200</stringProp>\n              <stringProp
    name=\"49587\">201</stringProp>\n              <stringProp name=\"50549\">302</stringProp>\n
    \           </collectionProp>\n            <stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>\n
    \           <boolProp name=\"Assertion.assume_success\">false</boolProp>\n            <intProp
    name=\"Assertion.test_type\">33</intProp>\n            <stringProp name=\"Assertion.custom_message\"></stringProp>\n
    \         </ResponseAssertion>\n          <hashTree/>\n        </hashTree>\n      </hashTree>\n
    \     <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\"
    testname=\"View Results Tree\" enabled=\"true\">\n        <boolProp name=\"ResultCollector.error_logging\">false</boolProp>\n
    \       <objProp>\n          <name>saveConfig</name>\n          <value class=\"SampleSaveConfiguration\">\n
    \           <time>true</time>\n            <latency>true</latency>\n            <timestamp>true</timestamp>\n
    \           <success>true</success>\n            <label>true</label>\n            <code>true</code>\n
    \           <message>true</message>\n            <threadName>true</threadName>\n
    \           <dataType>false</dataType>\n            <encoding>false</encoding>\n
    \           <assertions>true</assertions>\n            <subresults>true</subresults>\n
    \           <responseData>false</responseData>\n            <samplerData>false</samplerData>\n
    \           <xml>false</xml>\n            <fieldNames>true</fieldNames>\n            <responseHeaders>false</responseHeaders>\n
    \           <requestHeaders>false</requestHeaders>\n            <responseDataOnError>false</responseDataOnError>\n
    \           <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>\n
    \           <assertionsResultsToSave>0</assertionsResultsToSave>\n            <bytes>true</bytes>\n
    \           <threadCounts>true</threadCounts>\n            <idleTime>true</idleTime>\n
    \           <connectTime>true</connectTime>\n          </value>\n        </objProp>\n
    \       <stringProp name=\"TestPlan.comments\">For scripting only</stringProp>\n
    \       <stringProp name=\"filename\"></stringProp>\n      </ResultCollector>\n
    \     <hashTree/>\n    </hashTree>\n  </hashTree>\n</jmeterTestPlan>\n"
kind: ConfigMap
metadata:
  name: jmeter-pass-test
  namespace: default

---
apiVersion: v1
data:
  http.jmx:
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jmeterTestPlan version=\"1.2\"
    properties=\"5.0\" jmeter=\"5.4.1\">\n  <hashTree>\n    <TestPlan guiclass=\"TestPlanGui\"
    testclass=\"TestPlan\" testname=\"build-web-test-plan\" enabled=\"true\">\n      <stringProp
    name=\"TestPlan.comments\"></stringProp>\n      <boolProp name=\"TestPlan.functional_mode\">false</boolProp>\n
    \     <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>\n      <elementProp
    name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\"
    testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n
    \       <collectionProp name=\"Arguments.arguments\"/>\n      </elementProp>\n
    \     <stringProp name=\"TestPlan.user_define_classpath\"></stringProp>\n    </TestPlan>\n
    \   <hashTree>\n      <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\"
    testname=\"jmeter-test\" enabled=\"true\">\n        <stringProp name=\"ThreadGroup.on_sample_error\">continue</stringProp>\n
    \       <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\"
    guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\"
    enabled=\"true\">\n          <boolProp name=\"LoopController.continue_forever\">false</boolProp>\n
    \         <stringProp name=\"LoopController.loops\">1</stringProp>\n        </elementProp>\n
    \       <stringProp name=\"ThreadGroup.num_threads\">1</stringProp>\n        <stringProp
    name=\"ThreadGroup.ramp_time\">1</stringProp>\n        <longProp name=\"ThreadGroup.start_time\">1373789594000</longProp>\n
    \       <longProp name=\"ThreadGroup.end_time\">1373789594000</longProp>\n        <boolProp
    name=\"ThreadGroup.scheduler\">true</boolProp>\n        <stringProp name=\"ThreadGroup.duration\">60</stringProp>\n
    \       <stringProp name=\"ThreadGroup.delay\">5</stringProp>\n        <stringProp
    name=\"TestPlan.comments\">Virtual Users Running Scenario 1. \nMake test last
    1 minute (see Scheduler)</stringProp>\n        <boolProp name=\"ThreadGroup.same_user_on_next_iteration\">true</boolProp>\n
    \     </ThreadGroup>\n      <hashTree>\n        <ConfigTestElement guiclass=\"HttpDefaultsGui\"
    testclass=\"ConfigTestElement\" testname=\"HTTP Request Defaults\" enabled=\"true\">\n
    \         <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\"
    guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined
    Variables\" enabled=\"true\">\n            <collectionProp name=\"Arguments.arguments\"/>\n
    \         </elementProp>\n          <stringProp name=\"HTTPSampler.domain\">httpstat.us</stringProp>\n
    \         <stringProp name=\"HTTPSampler.port\">443</stringProp>\n          <stringProp
    name=\"HTTPSampler.protocol\">https</stringProp>\n          <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n
    \         <stringProp name=\"HTTPSampler.path\">/200</stringProp>\n          <stringProp
    name=\"HTTPSampler.concurrentPool\">4</stringProp>\n          <stringProp name=\"HTTPSampler.connect_timeout\">5000</stringProp>\n
    \         <stringProp name=\"HTTPSampler.response_timeout\">30000</stringProp>\n
    \       </ConfigTestElement>\n        <hashTree/>\n        <CookieManager guiclass=\"CookiePanel\"
    testclass=\"CookieManager\" testname=\"HTTP Cookie Manager\" enabled=\"true\">\n
    \         <collectionProp name=\"CookieManager.cookies\"/>\n          <boolProp
    name=\"CookieManager.clearEachIteration\">false</boolProp>\n          <boolProp
    name=\"CookieManager.controlledByThreadGroup\">false</boolProp>\n        </CookieManager>\n
    \       <hashTree/>\n        <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\"
    testname=\"HTTP Header Manager\" enabled=\"true\">\n          <collectionProp
    name=\"HeaderManager.headers\">\n            <elementProp name=\"User-Agent\"
    elementType=\"Header\">\n              <stringProp name=\"Header.name\">User-Agent</stringProp>\n
    \             <stringProp name=\"Header.value\"> Mozilla/5.0 (Macintosh; Intel
    Mac OS X 10.9; rv:48.0) Gecko/20100101 Firefox/48.0</stringProp>\n            </elementProp>\n
    \           <elementProp name=\"Accept\" elementType=\"Header\">\n              <stringProp
    name=\"Header.name\">Accept</stringProp>\n              <stringProp name=\"Header.value\">
    text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>\n
    \           </elementProp>\n            <elementProp name=\"Accept-Language\"
    elementType=\"Header\">\n              <stringProp name=\"Header.name\">Accept-Language</stringProp>\n
    \             <stringProp name=\"Header.value\"> fr,en-US;q=0.7,en;q=0.3</stringProp>\n
    \           </elementProp>\n            <elementProp name=\"Accept-Encoding\"
    elementType=\"Header\">\n              <stringProp name=\"Header.name\">Accept-Encoding</stringProp>\n
    \             <stringProp name=\"Header.value\"> gzip, deflate</stringProp>\n
    \           </elementProp>\n          </collectionProp>\n        </HeaderManager>\n
    \       <hashTree/>\n        <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\"
    testclass=\"HTTPSamplerProxy\" testname=\"Home Page\" enabled=\"true\">\n          <elementProp
    name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\"
    testclass=\"Arguments\" testname=\"Variables pré-définies\" enabled=\"true\">\n
    \           <collectionProp name=\"Arguments.arguments\"/>\n          </elementProp>\n
    \         <stringProp name=\"HTTPSampler.domain\">httpstat.us</stringProp>\n          <stringProp
    name=\"HTTPSampler.port\">443</stringProp>\n          <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n
    \         <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n          <stringProp
    name=\"HTTPSampler.path\">/stat</stringProp>\n          <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n
    \         <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n          <boolProp
    name=\"HTTPSampler.auto_redirects\">false</boolProp>\n          <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n
    \         <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n
    \         <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n          <stringProp
    name=\"HTTPSampler.connect_timeout\"></stringProp>\n          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n
    \       </HTTPSamplerProxy>\n        <hashTree>\n          <ResponseAssertion
    guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assertion\"
    enabled=\"true\">\n            <collectionProp name=\"Asserion.test_strings\">\n
    \             <stringProp name=\"-868354929\">&lt;h1&gt;Example Domain&lt;/h1&gt;</stringProp>\n
    \           </collectionProp>\n            <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>\n
    \           <boolProp name=\"Assertion.assume_success\">false</boolProp>\n            <intProp
    name=\"Assertion.test_type\">16</intProp>\n            <stringProp name=\"Assertion.custom_message\"></stringProp>\n
    \         </ResponseAssertion>\n          <hashTree/>\n        </hashTree>\n        <TestAction
    guiclass=\"TestActionGui\" testclass=\"TestAction\" testname=\"ThinkTime1s\" enabled=\"true\">\n
    \         <intProp name=\"ActionProcessor.action\">1</intProp>\n          <intProp
    name=\"ActionProcessor.target\">0</intProp>\n          <stringProp name=\"ActionProcessor.duration\">0</stringProp>\n
    \       </TestAction>\n        <hashTree>\n          <UniformRandomTimer guiclass=\"UniformRandomTimerGui\"
    testclass=\"UniformRandomTimer\" testname=\"URT\" enabled=\"true\">\n            <stringProp
    name=\"ConstantTimer.delay\">1000</stringProp>\n            <stringProp name=\"RandomTimer.range\">100.0</stringProp>\n
    \         </UniformRandomTimer>\n          <hashTree/>\n        </hashTree>\n
    \       <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\"
    testname=\"Page Returning 404\" enabled=\"true\">\n          <elementProp name=\"HTTPsampler.Arguments\"
    elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\"
    testname=\"Variables pré-définies\" enabled=\"true\">\n            <collectionProp
    name=\"Arguments.arguments\"/>\n          </elementProp>\n          <stringProp
    name=\"HTTPSampler.domain\"></stringProp>\n          <stringProp name=\"HTTPSampler.port\"></stringProp>\n
    \         <stringProp name=\"HTTPSampler.protocol\"></stringProp>\n          <stringProp
    name=\"HTTPSampler.contentEncoding\"></stringProp>\n          <stringProp name=\"HTTPSampler.path\">/test</stringProp>\n
    \         <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n          <boolProp
    name=\"HTTPSampler.follow_redirects\">true</boolProp>\n          <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n
    \         <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n          <boolProp
    name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n          <stringProp
    name=\"HTTPSampler.embedded_url_re\"></stringProp>\n          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n
    \         <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n          <stringProp
    name=\"TestPlan.comments\">It does not fails because we use an assertion that
    ignores status</stringProp>\n        </HTTPSamplerProxy>\n        <hashTree>\n
    \         <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\"
    testname=\"Assertion_404\" enabled=\"true\">\n            <collectionProp name=\"Asserion.test_strings\">\n
    \             <stringProp name=\"51512\">404</stringProp>\n            </collectionProp>\n
    \           <stringProp name=\"TestPlan.comments\">The assertion is specia:\n-
    It ignores status which would make it in error by default (404)\n- It checks Response
    Code is equal to 404</stringProp>\n            <stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>\n
    \           <boolProp name=\"Assertion.assume_success\">true</boolProp>\n            <intProp
    name=\"Assertion.test_type\">8</intProp>\n            <stringProp name=\"Assertion.custom_message\"></stringProp>\n
    \         </ResponseAssertion>\n          <hashTree/>\n        </hashTree>\n      </hashTree>\n
    \     <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\"
    testname=\"View Results Tree\" enabled=\"true\">\n        <boolProp name=\"ResultCollector.error_logging\">false</boolProp>\n
    \       <objProp>\n          <name>saveConfig</name>\n          <value class=\"SampleSaveConfiguration\">\n
    \           <time>true</time>\n            <latency>true</latency>\n            <timestamp>true</timestamp>\n
    \           <success>true</success>\n            <label>true</label>\n            <code>true</code>\n
    \           <message>true</message>\n            <threadName>true</threadName>\n
    \           <dataType>false</dataType>\n            <encoding>false</encoding>\n
    \           <assertions>true</assertions>\n            <subresults>true</subresults>\n
    \           <responseData>false</responseData>\n            <samplerData>false</samplerData>\n
    \           <xml>false</xml>\n            <fieldNames>true</fieldNames>\n            <responseHeaders>false</responseHeaders>\n
    \           <requestHeaders>false</requestHeaders>\n            <responseDataOnError>false</responseDataOnError>\n
    \           <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>\n
    \           <assertionsResultsToSave>0</assertionsResultsToSave>\n            <bytes>true</bytes>\n
    \           <threadCounts>true</threadCounts>\n            <idleTime>true</idleTime>\n
    \           <connectTime>true</connectTime>\n          </value>\n        </objProp>\n
    \       <stringProp name=\"TestPlan.comments\">For scripting only</stringProp>\n
    \       <stringProp name=\"filename\"></stringProp>\n      </ResultCollector>\n
    \     <hashTree/>\n    </hashTree>\n  </hashTree>\n</jmeterTestPlan>\n"
kind: ConfigMap
metadata:
  name: jmeter-fail-test
  namespace: default
---
apiVersion: v1
kind: Namespace
metadata:
  name: ldap
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: apacheds-ldif
  namespace: ldap
data:
  users.ldif: |
    #########################################################
    # MICROSOFT SCHEMA for sAMAccountName and memberOf
    # these two attributes are not defined in Apache Directory Server
    #########################################################

    dn: cn=microsoft, ou=schema
    objectclass: metaSchema
    objectclass: top
    cn: microsoft

    dn: ou=attributetypes, cn=microsoft, ou=schema
    objectclass: organizationalUnit
    objectclass: top
    ou: attributetypes

    dn: m-oid=1.2.840.113556.1.4.221, ou=attributetypes, cn=microsoft, ou=schema
    objectclass: metaAttributeType
    objectclass: metaTop
    objectclass: top
    m-oid: 1.2.840.113556.1.4.221
    m-name: sAMAccountName
    m-equality: caseIgnoreMatch
    m-syntax: 1.3.6.1.4.1.1466.115.121.1.15
    m-singleValue: TRUE

    dn: m-oid=1.2.840.113556.1.4.222, ou=attributetypes, cn=microsoft, ou=schema
    objectclass: metaAttributeType
    objectclass: metaTop
    objectclass: top
    m-oid: 1.2.840.113556.1.4.222
    m-name: memberOf
    m-equality: caseIgnoreMatch
    m-syntax: 1.3.6.1.4.1.1466.115.121.1.15
    m-singleValue: FALSE

    dn: m-oid=1.2.840.113556.1.4.223, ou=attributetypes, cn=microsoft, ou=schema
    objectclass: metaAttributeType
    objectclass: metaTop
    objectclass: top
    m-oid: 1.2.840.113556.1.4.223
    m-name: objectCategory
    m-equality: caseIgnoreMatch
    m-syntax: 1.3.6.1.4.1.1466.115.121.1.15
    m-singleValue: TRUE

    dn: ou=objectclasses, cn=microsoft, ou=schema
    objectclass: organizationalUnit
    objectclass: top
    ou: objectClasses

    dn: m-oid=1.2.840.113556.1.5.6, ou=objectclasses, cn=microsoft, ou=schema
    objectclass: metaObjectClass
    objectclass: metaTop
    objectclass: top
    m-oid: 1.2.840.113556.1.5.6
    m-name: simulatedMicrosoftSecurityPrincipal
    m-supObjectClass: top
    m-typeObjectClass: AUXILIARY
    m-must: sAMAccountName
    m-may: memberOf
    m-must: objectCategory

    ############
    # Domain
    ############
    dn: ou=users,dc=example,dc=com
    objectClass: organizationalUnit
    objectClass: top
    ou: users

    dn: uid=test,ou=users,dc=example,dc=com
    objectClass: top
    objectClass: person
    objectClass: inetOrgPerson
    objectClass: simulatedMicrosoftSecurityPrincipal
    objectCategory: User
    cn: Test User
    sn: test
    uid: test
    sAMAccountName: test
    userPassword: secret
    memberOf: admin
    mail: test@example.com
    displayName: John

    dn: ou=roles,dc=example,dc=com
    objectclass: top
    objectclass: organizationalUnit
    ou: roles

    dn: cn=admin,ou=roles,dc=example,dc=com
    objectClass: top
    objectClass: groupOfNames
    cn: admin
    member: uid=test,ou=users,dc=example,dc=com

    dn: ou=groups,dc=example,dc=com
    objectclass: top
    objectclass: organizationalunit
    ou: groups

    dn: cn=k8s,ou=groups,dc=example,dc=com
    objectClass: top
    objectClass: groupOfNames
    cn: Kubernetes
    member: uid=test,ou=users,dc=example,dc=com


---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apacheds
  name: apacheds
  namespace: ldap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apacheds
  template:
    metadata:
      labels:
        app: apacheds
    spec:
      containers:
        - image: quay.io/toni0/apacheds:2.0.0_AM25_1
          name: apacheds
          resources:
            requests:
              cpu: 10m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 500Mi
          ports:
            - name: ldap
              containerPort: 10389
            - name: ldaps
              containerPort: 10636
          volumeMounts:
            - name: config-ldif
              mountPath: /bootstrap
          env:
            - name: BOOTSTRAP_FILE
              value: /bootstrap/users.ldif
      volumes:
        - name: config-ldif
          configMap:
            name: apacheds-ldif
            items:
              - key: users.ldif
                path: users.ldif
---
apiVersion: v1
kind: Service
metadata:
  name: apacheds
  namespace: ldap
spec:
  ports:
    - name: ldap
      port: 10389
      protocol: TCP
      targetPort: 10389
    - name: ldaps
      port: 10636
      protocol: TCP
      targetPort: 10636
  selector:
    app: apacheds
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-rbac-ldap
rules:
  - apiGroups: ["*"]
    resources: ["pods", "nodes"]
    verbs: ["list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-rbac-role
subjects:
  - apiGroup: ""
    kind: User
    name: test@example.com
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: test-rbac-ldap