#yaml-language-server: $schema=../../generate-schemas/schemas/system.schema.json
apiVersion: canaries.flanksource.com/v1
kind: Topology
metadata:
  name: cluster
  labels:
    canary: "kubernetes-cluster"
spec:
  type: KubernetesCluster
  icon: kubernetes
  schedule: "@every 10m"
  id:
    javascript: properties.id
  configs:
    - name: flanksource-canary-cluster
      type: EKS
  components:
    - name: nodes
      icon: server
      owner: infra
      id:
        javascript: properties.zone + "/" + self.name
      type: KubernetesNode
      configs:
        - name: flanksource-canary-cluster
          type: EKS
#     properties:
#       - name: cluster-name
#         configLookup:
#           display:
#             javascript: findConfigItem("EKS", "flanksource-canary-cluster")["name"]
#       - name: cluster-status
#         configLookup:
#           display:
#             javascript: getConfigItems("EKS")[0]["spec"]["status"]

      components:
        - name: NodesGroup
          type: virtual
          icon: server
          lookup:
            kubernetes:
              - kind: Node
                name: k8s
                display:
                  javascript: JSON.stringify(k8s.getNodeTopology(results)) 
          forEach:
            properties:
              - name: cpu
                lookup:
                  prometheus:
                  - query: '1000 * max(rate(container_cpu_usage_seconds_total{container!="",node="${.component.name}"}[5m]))'
                    host: 'http://prometheus-k8s.monitoring:9090'
                    display:
                      javascript: |
                        value = ''
                        if (results.length > 0) {
                          value = results[0].value
                        }
                        JSON.stringify([{'name': 'cpu', 'value': parseInt(Number(value))}])
              - name: Memory %
                lookup:
                  prometheus:
                  - query: 'sum(avg_over_time(container_memory_working_set_bytes{container!="",node="${.component.name}"}[5m]))'
                    host: 'http://prometheus-k8s.monitoring:9090'
                    display:
                      javascript: |
                        value = ''
                        if (results.length > 0) {
                          value = results[0].value
                        }
                        JSON.stringify([{'name': 'memory', 'value': parseInt(Number(value))}])
    - name: pods
      icon: pods
      type: KubernetesPods
      owner: Dev
      components:
        - name: PodGroup
          icon: pods
          type: virtual
          lookup:
            kubernetes:
              - kind: Pod
                name: k8s-pods
                ready: false
                ignore:
                  - junit-fail**
                  - junit-pass**
                display:
                  javascript: JSON.stringify(k8s.getPodTopology(results)) 
          forEach:
            properties:
              - name: cpu
                lookup:
                  prometheus:
                  - query: '1000 * max(rate(container_cpu_usage_seconds_total{container!="",pod="${.component.name}"}[5m]))'
                    host: 'http://prometheus-k8s.monitoring:9090'
                    display:
                      javascript: |
                        value = ''
                        if (results.length > 0) {
                          value = results[0].value
                        }
                        JSON.stringify([{'name': 'cpu', 'value': parseInt(Number(value))}])
              - name: memory
                lookup:
                  prometheus:
                  - query: 'sum(avg_over_time(container_memory_working_set_bytes{pod="${.component.name}"}[5m]))'
                    host: 'http://prometheus-k8s.monitoring:9090'
                    display:
                      javascript: |
                        value = ''
                        if (results.length > 0) {
                          value = results[0].value
                        }
                        JSON.stringify([{'name': 'memory', 'value': parseInt(Number(value))}])
