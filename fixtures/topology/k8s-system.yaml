#yaml-language-server: $schema=../../generate-schemas/schemas/system.schema.json
apiVersion: canaries.flanksource.com/v1
kind: SystemTemplate
metadata:
  name: cluster
  labels:
    canary: "kubernetes-cluster"
spec:
  type: KubernetesCluster
  icon: kubernetes
  schedule: "@every 10m"
  id:
    javascript: properties.id
  configs:
    - name: flanksource-canary-cluster
      type: EKS
  components:
    - name: nodes
      icon: server
      owner: infra
      id:
        javascript: properties.zone + "/" + self.name
      type: KubernetesNode
      configs:
        - name: flanksource-canary-cluster
          type: EKS
#     properties:
#       - name: cluster-name
#         configLookup:
#           display:
#             javascript: findConfigItem("EKS", "flanksource-canary-cluster")["name"]
#       - name: cluster-status
#         configLookup:
#           display:
#             javascript: getConfigItems("EKS")[0]["spec"]["status"]

      components:
        - name: NodesGroup
          type: virtual
          icon: server
          lookup:
            kubernetes:
              - kind: Node
                name: k8s
                display:
                  javascript: JSON.stringify(k8s.getNodeTopology(results)) 
          properties:
            - name: node-metrics
              lookup:
                kubernetes:
                  - kind: NodeMetrics
                    ready: false
                    name: nodemetrics
                    display:
                      javascript: JSON.stringify(k8s.getNodeMetrics(results))
    - name: pods
      icon: pods
      type: KubernetesPods
      owner: Dev
      components:
        - name: PodGroup
          icon: pods
          type: virtual
          lookup:
            kubernetes:
              - kind: Pod
                name: k8s-pods
                ready: false
                ignore:
                  - junit-fail**
                  - junit-pass**
                display:
                  javascript: JSON.stringify(k8s.getPodTopology(results)) 
          properties:
            - name: pod-metrics
              lookup:
                kubernetes:
                  - kind: PodMetrics
                    ready: false
                    name: podmetrics
                    display:
                      javascript: JSON.stringify(k8s.getPodMetrics(results))
  # properties:
  #   - name: name
  #     lookup:
  #       kubernetes:
  #         - kind: ConfigMap
  #           name: test
  #           namespace:
  #             name: quack
  #           resource:
  #             name: quack-config
  #           display:
  #             javascript: |+
  #               parts =  results[0].Object.data.name.split(":")
  #               props = [    {
  #                 name: "dns",
  #                 text:    results[0].Object.data.domain
  #               },
  #               {
  #                 name: "id",
  #                 text: results[0].Object.data.name,
  #                 type: "hidden",
  #               },
  #               {
  #                 name: "name",
  #                 text:  parts[5].split("/")[1]
  #               },
  #               {
  #                 name: "account",
  #                 text: parts[4]
  #               },
  #               {
  #                 name: "region",
  #                 text: parts[3]
  #               }
  #               ]
  #               JSON.stringify(props)

