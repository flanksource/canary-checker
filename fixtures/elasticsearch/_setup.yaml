apiVersion: v1
kind: Secret
metadata:
  name: search
  namespace: canaries
stringData:
  ELASTIC_SEARCH_USERNAME: admin
  ELASTIC_SEARCH_PASSWORD: secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
  namespace: canaries
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms256m -Xmx256m"
            - name: network.bind_host
              value: 0.0.0.0
            - name: network.host
              value: 0.0.0.0
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 10
        - name: populate-db
          image: ellerbrock/alpine-bash-curl-ssl
          command: ["/bin/sh", "-c"]
          readinessProbe:
            exec:
              command:
                - ls
                - /tmp/done
          args:
            # We install wait-for-it and wait for elasticsearch to be ready and then
            # populate it with dummy data
            - >
              echo "Starting Elasticsearch";
              curl -s https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -o wait-for-it.sh;
              chmod +x wait-for-it.sh; ./wait-for-it.sh localhost:9200 --timeout=0;
              printf "\nWaiting for cluster status to be green\n";
              curl -s -X GET "localhost:9200/_cluster/health?wait_for_status=green&wait_for_active_shards=all&timeout=2m" -H 'Content-Type: application/json';
              printf "\nCreating new index\n";
              curl -s -X PUT localhost:9200/index;
              printf "\nReducing replicas to 0\n";
              curl -s -X PUT "localhost:9200/index/_settings" -H 'Content-Type: application/json' -d '{"index" : {"number_of_replicas" : 0}}';
              print "\nGetting Health data\n";
              curl -s "localhost:9200/_cluster/health" -H 'Content-Type: application/json';
              curl -s "localhost:9200/_cluster/allocation/explain" -H 'Content-Type: application/json';
              printf "\nInserting dummy data\n";
              curl -s -X POST localhost:9200/index/_doc -d '{"system": {"role": "api"}}' -H 'Content-Type: application/json';
              printf "\nCreating /tmp/done\n";
              touch /tmp/done;
              sleep 365d;
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: canaries
spec:
  ports:
    - name: elasticsearch
      port: 9200
      targetPort: 9200
      protocol: TCP
  selector:
    app: elasticsearch
