//go:build !ignore_autogenerated

/*
Copyright 2020 The Kubernetes authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"encoding/json"
	"github.com/flanksource/canary-checker/api/external"
	"github.com/flanksource/duty"
	"github.com/flanksource/duty/connection"
	"github.com/flanksource/duty/types"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	"k8s.io/apimachinery/pkg/runtime"
	timex "time"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertManager) DeepCopyInto(out *AlertManager) {
	*out = *in
	in.AlertManagerCheck.DeepCopyInto(&out.AlertManagerCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertManager.
func (in *AlertManager) DeepCopy() *AlertManager {
	if in == nil {
		return nil
	}
	out := new(AlertManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertManagerCheck) DeepCopyInto(out *AlertManagerCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
	in.Relatable.DeepCopyInto(&out.Relatable)
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExcludeFilters != nil {
		in, out := &in.ExcludeFilters, &out.ExcludeFilters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertManagerCheck.
func (in *AlertManagerCheck) DeepCopy() *AlertManagerCheck {
	if in == nil {
		return nil
	}
	out := new(AlertManagerCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Artifact) DeepCopyInto(out *Artifact) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Artifact.
func (in *Artifact) DeepCopy() *Artifact {
	if in == nil {
		return nil
	}
	out := new(Artifact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authentication) DeepCopyInto(out *Authentication) {
	*out = *in
	in.Username.DeepCopyInto(&out.Username)
	in.Password.DeepCopyInto(&out.Password)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authentication.
func (in *Authentication) DeepCopy() *Authentication {
	if in == nil {
		return nil
	}
	out := new(Authentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsConfig) DeepCopyInto(out *AwsConfig) {
	*out = *in
	in.AwsConfigCheck.DeepCopyInto(&out.AwsConfigCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsConfig.
func (in *AwsConfig) DeepCopy() *AwsConfig {
	if in == nil {
		return nil
	}
	out := new(AwsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsConfigCheck) DeepCopyInto(out *AwsConfigCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.AWSConnection != nil {
		in, out := &in.AWSConnection, &out.AWSConnection
		*out = new(connection.AWSConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.AggregatorName != nil {
		in, out := &in.AggregatorName, &out.AggregatorName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsConfigCheck.
func (in *AwsConfigCheck) DeepCopy() *AwsConfigCheck {
	if in == nil {
		return nil
	}
	out := new(AwsConfigCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsConfigRule) DeepCopyInto(out *AwsConfigRule) {
	*out = *in
	in.AwsConfigRuleCheck.DeepCopyInto(&out.AwsConfigRuleCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsConfigRule.
func (in *AwsConfigRule) DeepCopy() *AwsConfigRule {
	if in == nil {
		return nil
	}
	out := new(AwsConfigRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsConfigRuleCheck) DeepCopyInto(out *AwsConfigRuleCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.IgnoreRules != nil {
		in, out := &in.IgnoreRules, &out.IgnoreRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ComplianceTypes != nil {
		in, out := &in.ComplianceTypes, &out.ComplianceTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AWSConnection != nil {
		in, out := &in.AWSConnection, &out.AWSConnection
		*out = new(connection.AWSConnection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsConfigRuleCheck.
func (in *AwsConfigRuleCheck) DeepCopy() *AwsConfigRuleCheck {
	if in == nil {
		return nil
	}
	out := new(AwsConfigRuleCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConnection) DeepCopyInto(out *AzureConnection) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConnection.
func (in *AzureConnection) DeepCopy() *AzureConnection {
	if in == nil {
		return nil
	}
	out := new(AzureConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureDevopsCheck) DeepCopyInto(out *AzureDevopsCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.PersonalAccessToken.DeepCopyInto(&out.PersonalAccessToken)
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ThresholdMillis != nil {
		in, out := &in.ThresholdMillis, &out.ThresholdMillis
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureDevopsCheck.
func (in *AzureDevopsCheck) DeepCopy() *AzureDevopsCheck {
	if in == nil {
		return nil
	}
	out := new(AzureDevopsCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bucket) DeepCopyInto(out *Bucket) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bucket.
func (in *Bucket) DeepCopy() *Bucket {
	if in == nil {
		return nil
	}
	out := new(Bucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Canary) DeepCopyInto(out *Canary) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Canary.
func (in *Canary) DeepCopy() *Canary {
	if in == nil {
		return nil
	}
	out := new(Canary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Canary) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryList) DeepCopyInto(out *CanaryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Canary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryList.
func (in *CanaryList) DeepCopy() *CanaryList {
	if in == nil {
		return nil
	}
	out := new(CanaryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CanaryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanarySpec) DeepCopyInto(out *CanarySpec) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make(map[string]VarSource, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]HTTPCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DockerPull != nil {
		in, out := &in.DockerPull, &out.DockerPull
		*out = make([]DockerPullCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DockerPush != nil {
		in, out := &in.DockerPush, &out.DockerPush
		*out = make([]DockerPushCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerdPull != nil {
		in, out := &in.ContainerdPull, &out.ContainerdPull
		*out = make([]ContainerdPullCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerdPush != nil {
		in, out := &in.ContainerdPush, &out.ContainerdPush
		*out = make([]ContainerdPushCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Check, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = make([]TCPCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = make([]PodCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LDAP != nil {
		in, out := &in.LDAP, &out.LDAP
		*out = make([]LDAPCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ICMP != nil {
		in, out := &in.ICMP, &out.ICMP
		*out = make([]ICMPCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Postgres != nil {
		in, out := &in.Postgres, &out.Postgres
		*out = make([]PostgresCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mssql != nil {
		in, out := &in.Mssql, &out.Mssql
		*out = make([]MssqlCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mysql != nil {
		in, out := &in.Mysql, &out.Mysql
		*out = make([]MysqlCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restic != nil {
		in, out := &in.Restic, &out.Restic
		*out = make([]ResticCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jmeter != nil {
		in, out := &in.Jmeter, &out.Jmeter
		*out = make([]JmeterCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Junit != nil {
		in, out := &in.Junit, &out.Junit
		*out = make([]JunitCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helm != nil {
		in, out := &in.Helm, &out.Helm
		*out = make([]HelmCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redis != nil {
		in, out := &in.Redis, &out.Redis
		*out = make([]RedisCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = make([]PrometheusCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDB != nil {
		in, out := &in.MongoDB, &out.MongoDB
		*out = make([]MongoDBCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudWatch != nil {
		in, out := &in.CloudWatch, &out.CloudWatch
		*out = make([]CloudWatchCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GitHub != nil {
		in, out := &in.GitHub, &out.GitHub
		*out = make([]GitHubCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GitProtocol != nil {
		in, out := &in.GitProtocol, &out.GitProtocol
		*out = make([]GitProtocolCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubernetes != nil {
		in, out := &in.Kubernetes, &out.Kubernetes
		*out = make([]KubernetesCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesResource != nil {
		in, out := &in.KubernetesResource, &out.KubernetesResource
		*out = make([]KubernetesResourceCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = make([]FolderCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Exec != nil {
		in, out := &in.Exec, &out.Exec
		*out = make([]ExecCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsConfig != nil {
		in, out := &in.AwsConfig, &out.AwsConfig
		*out = make([]AwsConfigCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsConfigRule != nil {
		in, out := &in.AwsConfigRule, &out.AwsConfigRule
		*out = make([]AwsConfigRuleCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseBackup != nil {
		in, out := &in.DatabaseBackup, &out.DatabaseBackup
		*out = make([]DatabaseBackupCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = make([]CatalogCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Opensearch != nil {
		in, out := &in.Opensearch, &out.Opensearch
		*out = make([]OpenSearchCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ElasticsearchCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertManager != nil {
		in, out := &in.AlertManager, &out.AlertManager
		*out = make([]AlertManagerCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynatrace != nil {
		in, out := &in.Dynatrace, &out.Dynatrace
		*out = make([]DynatraceCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureDevops != nil {
		in, out := &in.AzureDevops, &out.AzureDevops
		*out = make([]AzureDevopsCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = new(WebhookCheck)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanarySpec.
func (in *CanarySpec) DeepCopy() *CanarySpec {
	if in == nil {
		return nil
	}
	out := new(CanarySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryStatus) DeepCopyInto(out *CanaryStatus) {
	*out = *in
	if in.PersistedID != nil {
		in, out := &in.PersistedID, &out.PersistedID
		*out = new(string)
		**out = **in
	}
	if in.LastTransitionedTime != nil {
		in, out := &in.LastTransitionedTime, &out.LastTransitionedTime
		*out = (*in).DeepCopy()
	}
	if in.LastCheck != nil {
		in, out := &in.LastCheck, &out.LastCheck
		*out = (*in).DeepCopy()
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(CanaryStatusCondition)
		**out = **in
	}
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ChecksStatus != nil {
		in, out := &in.ChecksStatus, &out.ChecksStatus
		*out = make(map[string]*CheckStatus, len(*in))
		for key, val := range *in {
			var outVal *CheckStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(CheckStatus)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryStatus.
func (in *CanaryStatus) DeepCopy() *CanaryStatus {
	if in == nil {
		return nil
	}
	out := new(CanaryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogCheck) DeepCopyInto(out *CatalogCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(types.ResourceSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogCheck.
func (in *CatalogCheck) DeepCopy() *CatalogCheck {
	if in == nil {
		return nil
	}
	out := new(CatalogCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Check) DeepCopyInto(out *Check) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Check.
func (in *Check) DeepCopy() *Check {
	if in == nil {
		return nil
	}
	out := new(Check)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckRelationship) DeepCopyInto(out *CheckRelationship) {
	*out = *in
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]duty.LookupSpec, len(*in))
		copy(*out, *in)
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]duty.LookupSpec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckRelationship.
func (in *CheckRelationship) DeepCopy() *CheckRelationship {
	if in == nil {
		return nil
	}
	out := new(CheckRelationship)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckStatus) DeepCopyInto(out *CheckStatus) {
	*out = *in
	if in.LastTransitionedTime != nil {
		in, out := &in.LastTransitionedTime, &out.LastTransitionedTime
		*out = (*in).DeepCopy()
	}
	if in.LastCheck != nil {
		in, out := &in.LastCheck, &out.LastCheck
		*out = (*in).DeepCopy()
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckStatus.
func (in *CheckStatus) DeepCopy() *CheckStatus {
	if in == nil {
		return nil
	}
	out := new(CheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudWatch) DeepCopyInto(out *CloudWatch) {
	*out = *in
	in.CloudWatchCheck.DeepCopyInto(&out.CloudWatchCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudWatch.
func (in *CloudWatch) DeepCopy() *CloudWatch {
	if in == nil {
		return nil
	}
	out := new(CloudWatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudWatchCheck) DeepCopyInto(out *CloudWatchCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.AWSConnection.DeepCopyInto(&out.AWSConnection)
	out.Templatable = in.Templatable
	in.CloudWatchFilter.DeepCopyInto(&out.CloudWatchFilter)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudWatchCheck.
func (in *CloudWatchCheck) DeepCopy() *CloudWatchCheck {
	if in == nil {
		return nil
	}
	out := new(CloudWatchCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudWatchFilter) DeepCopyInto(out *CloudWatchFilter) {
	*out = *in
	if in.ActionPrefix != nil {
		in, out := &in.ActionPrefix, &out.ActionPrefix
		*out = new(string)
		**out = **in
	}
	if in.AlarmPrefix != nil {
		in, out := &in.AlarmPrefix, &out.AlarmPrefix
		*out = new(string)
		**out = **in
	}
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudWatchFilter.
func (in *CloudWatchFilter) DeepCopy() *CloudWatchFilter {
	if in == nil {
		return nil
	}
	out := new(CloudWatchFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Component) DeepCopyInto(out *Component) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Component.
func (in *Component) DeepCopy() *Component {
	if in == nil {
		return nil
	}
	out := new(Component)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Component) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentCheck) DeepCopyInto(out *ComponentCheck) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Inline != nil {
		in, out := &in.Inline, &out.Inline
		*out = new(CanarySpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentCheck.
func (in *ComponentCheck) DeepCopy() *ComponentCheck {
	if in == nil {
		return nil
	}
	out := new(ComponentCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ComponentChecks) DeepCopyInto(out *ComponentChecks) {
	{
		in := &in
		*out = make(ComponentChecks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentChecks.
func (in ComponentChecks) DeepCopy() ComponentChecks {
	if in == nil {
		return nil
	}
	out := new(ComponentChecks)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentList) DeepCopyInto(out *ComponentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Component, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentList.
func (in *ComponentList) DeepCopy() *ComponentList {
	if in == nil {
		return nil
	}
	out := new(ComponentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(Template)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Relationships != nil {
		in, out := &in.Relationships, &out.Relationships
		*out = make([]RelationshipSpec, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*Property, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Property)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Lookup != nil {
		in, out := &in.Lookup, &out.Lookup
		*out = new(CanarySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentSpecObject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Selectors != nil {
		in, out := &in.Selectors, &out.Selectors
		*out = make(types.ResourceSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComponentChecks != nil {
		in, out := &in.ComponentChecks, &out.ComponentChecks
		*out = make(ComponentChecks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make(types.ConfigQueries, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(types.ConfigQuery)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(types.Summary)
		(*in).DeepCopyInto(*out)
	}
	if in.ForEach != nil {
		in, out := &in.ForEach, &out.ForEach
		*out = new(ForEach)
		(*in).DeepCopyInto(*out)
	}
	if in.LogSelectors != nil {
		in, out := &in.LogSelectors, &out.LogSelectors
		*out = make(types.LogSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentLookup != nil {
		in, out := &in.ParentLookup, &out.ParentLookup
		*out = new(ParentLookup)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpecObject) DeepCopyInto(out *ComponentSpecObject) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(Template)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Relationships != nil {
		in, out := &in.Relationships, &out.Relationships
		*out = make([]RelationshipSpec, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*Property, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Property)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Lookup != nil {
		in, out := &in.Lookup, &out.Lookup
		*out = new(CanarySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentSpecObject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Selectors != nil {
		in, out := &in.Selectors, &out.Selectors
		*out = make(types.ResourceSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComponentChecks != nil {
		in, out := &in.ComponentChecks, &out.ComponentChecks
		*out = make(ComponentChecks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make(types.ConfigQueries, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(types.ConfigQuery)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(types.Summary)
		(*in).DeepCopyInto(*out)
	}
	if in.ForEach != nil {
		in, out := &in.ForEach, &out.ForEach
		*out = new(ForEach)
		(*in).DeepCopyInto(*out)
	}
	if in.LogSelectors != nil {
		in, out := &in.LogSelectors, &out.LogSelectors
		*out = make(types.LogSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentLookup != nil {
		in, out := &in.ParentLookup, &out.ParentLookup
		*out = new(ParentLookup)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpecObject.
func (in *ComponentSpecObject) DeepCopy() *ComponentSpecObject {
	if in == nil {
		return nil
	}
	out := new(ComponentSpecObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentStatus) DeepCopyInto(out *ComponentStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentStatus.
func (in *ComponentStatus) DeepCopy() *ComponentStatus {
	if in == nil {
		return nil
	}
	out := new(ComponentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigLookup) DeepCopyInto(out *ConfigLookup) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(types.ConfigQuery)
		(*in).DeepCopyInto(*out)
	}
	out.Display = in.Display
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigLookup.
func (in *ConfigLookup) DeepCopy() *ConfigLookup {
	if in == nil {
		return nil
	}
	out := new(ConfigLookup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	in.Authentication.DeepCopyInto(&out.Authentication)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerdPull) DeepCopyInto(out *ContainerdPull) {
	*out = *in
	in.ContainerdPullCheck.DeepCopyInto(&out.ContainerdPullCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerdPull.
func (in *ContainerdPull) DeepCopy() *ContainerdPull {
	if in == nil {
		return nil
	}
	out := new(ContainerdPull)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerdPullCheck) DeepCopyInto(out *ContainerdPullCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.Auth.DeepCopyInto(&out.Auth)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerdPullCheck.
func (in *ContainerdPullCheck) DeepCopy() *ContainerdPullCheck {
	if in == nil {
		return nil
	}
	out := new(ContainerdPullCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerdPush) DeepCopyInto(out *ContainerdPush) {
	*out = *in
	in.ContainerdPushCheck.DeepCopyInto(&out.ContainerdPushCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerdPush.
func (in *ContainerdPush) DeepCopy() *ContainerdPush {
	if in == nil {
		return nil
	}
	out := new(ContainerdPush)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerdPushCheck) DeepCopyInto(out *ContainerdPushCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerdPushCheck.
func (in *ContainerdPushCheck) DeepCopy() *ContainerdPushCheck {
	if in == nil {
		return nil
	}
	out := new(ContainerdPushCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNS) DeepCopyInto(out *DNS) {
	*out = *in
	in.DNSCheck.DeepCopyInto(&out.DNSCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNS.
func (in *DNS) DeepCopy() *DNS {
	if in == nil {
		return nil
	}
	out := new(DNS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCheck) DeepCopyInto(out *DNSCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.ExactReply != nil {
		in, out := &in.ExactReply, &out.ExactReply
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCheck.
func (in *DNSCheck) DeepCopy() *DNSCheck {
	if in == nil {
		return nil
	}
	out := new(DNSCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseBackup) DeepCopyInto(out *DatabaseBackup) {
	*out = *in
	in.DatabaseBackupCheck.DeepCopyInto(&out.DatabaseBackupCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseBackup.
func (in *DatabaseBackup) DeepCopy() *DatabaseBackup {
	if in == nil {
		return nil
	}
	out := new(DatabaseBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseBackupCheck) DeepCopyInto(out *DatabaseBackupCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = new(GCPDatabase)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseBackupCheck.
func (in *DatabaseBackupCheck) DeepCopy() *DatabaseBackupCheck {
	if in == nil {
		return nil
	}
	out := new(DatabaseBackupCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Description) DeepCopyInto(out *Description) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(Labels, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]external.Metrics, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Description.
func (in *Description) DeepCopy() *Description {
	if in == nil {
		return nil
	}
	out := new(Description)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Display) DeepCopyInto(out *Display) {
	*out = *in
	out.Template = in.Template
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Display.
func (in *Display) DeepCopy() *Display {
	if in == nil {
		return nil
	}
	out := new(Display)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerPull) DeepCopyInto(out *DockerPull) {
	*out = *in
	in.DockerPullCheck.DeepCopyInto(&out.DockerPullCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerPull.
func (in *DockerPull) DeepCopy() *DockerPull {
	if in == nil {
		return nil
	}
	out := new(DockerPull)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerPullCheck) DeepCopyInto(out *DockerPullCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(Authentication)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerPullCheck.
func (in *DockerPullCheck) DeepCopy() *DockerPullCheck {
	if in == nil {
		return nil
	}
	out := new(DockerPullCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerPush) DeepCopyInto(out *DockerPush) {
	*out = *in
	in.DockerPushCheck.DeepCopyInto(&out.DockerPushCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerPush.
func (in *DockerPush) DeepCopy() *DockerPush {
	if in == nil {
		return nil
	}
	out := new(DockerPush)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerPushCheck) DeepCopyInto(out *DockerPushCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(Authentication)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerPushCheck.
func (in *DockerPushCheck) DeepCopy() *DockerPushCheck {
	if in == nil {
		return nil
	}
	out := new(DockerPushCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynatraceCheck) DeepCopyInto(out *DynatraceCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.APIKey.DeepCopyInto(&out.APIKey)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynatraceCheck.
func (in *DynatraceCheck) DeepCopy() *DynatraceCheck {
	if in == nil {
		return nil
	}
	out := new(DynatraceCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Elasticsearch) DeepCopyInto(out *Elasticsearch) {
	*out = *in
	in.ElasticsearchCheck.DeepCopyInto(&out.ElasticsearchCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Elasticsearch.
func (in *Elasticsearch) DeepCopy() *Elasticsearch {
	if in == nil {
		return nil
	}
	out := new(Elasticsearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchCheck) DeepCopyInto(out *ElasticsearchCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchCheck.
func (in *ElasticsearchCheck) DeepCopy() *ElasticsearchCheck {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Exec) DeepCopyInto(out *Exec) {
	*out = *in
	in.ExecCheck.DeepCopyInto(&out.ExecCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Exec.
func (in *Exec) DeepCopy() *Exec {
	if in == nil {
		return nil
	}
	out := new(Exec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecCheck) DeepCopyInto(out *ExecCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connections.DeepCopyInto(&out.Connections)
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]types.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Checkout != nil {
		in, out := &in.Checkout, &out.Checkout
		*out = new(GitCheckout)
		(*in).DeepCopyInto(*out)
	}
	if in.Artifacts != nil {
		in, out := &in.Artifacts, &out.Artifacts
		*out = make([]Artifact, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecCheck.
func (in *ExecCheck) DeepCopy() *ExecCheck {
	if in == nil {
		return nil
	}
	out := new(ExecCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecConnections) DeepCopyInto(out *ExecConnections) {
	*out = *in
	if in.AWS != nil {
		in, out := &in.AWS, &out.AWS
		*out = new(connection.AWSConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = new(connection.GCPConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = new(AzureConnection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecConnections.
func (in *ExecConnections) DeepCopy() *ExecConnections {
	if in == nil {
		return nil
	}
	out := new(ExecConnections)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Folder) DeepCopyInto(out *Folder) {
	*out = *in
	in.FolderCheck.DeepCopyInto(&out.FolderCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Folder.
func (in *Folder) DeepCopy() *Folder {
	if in == nil {
		return nil
	}
	out := new(Folder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderCheck) DeepCopyInto(out *FolderCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	out.Filter = in.Filter
	in.FolderTest.DeepCopyInto(&out.FolderTest)
	if in.S3Connection != nil {
		in, out := &in.S3Connection, &out.S3Connection
		*out = new(connection.S3Connection)
		(*in).DeepCopyInto(*out)
	}
	if in.GCSConnection != nil {
		in, out := &in.GCSConnection, &out.GCSConnection
		*out = new(connection.GCSConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.SMBConnection != nil {
		in, out := &in.SMBConnection, &out.SMBConnection
		*out = new(connection.SMBConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.SFTPConnection != nil {
		in, out := &in.SFTPConnection, &out.SFTPConnection
		*out = new(connection.SFTPConnection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderCheck.
func (in *FolderCheck) DeepCopy() *FolderCheck {
	if in == nil {
		return nil
	}
	out := new(FolderCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFilter) DeepCopyInto(out *FolderFilter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFilter.
func (in *FolderFilter) DeepCopy() *FolderFilter {
	if in == nil {
		return nil
	}
	out := new(FolderFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderTest) DeepCopyInto(out *FolderTest) {
	*out = *in
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderTest.
func (in *FolderTest) DeepCopy() *FolderTest {
	if in == nil {
		return nil
	}
	out := new(FolderTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEach) DeepCopyInto(out *ForEach) {
	*out = *in
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(Properties, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]types.ConfigQuery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Selectors != nil {
		in, out := &in.Selectors, &out.Selectors
		*out = make(types.ResourceSelectors, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Relationships != nil {
		in, out := &in.Relationships, &out.Relationships
		*out = make([]RelationshipSpec, len(*in))
		copy(*out, *in)
	}
	if in.ComponentChecks != nil {
		in, out := &in.ComponentChecks, &out.ComponentChecks
		*out = make(types.ComponentChecks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEach.
func (in *ForEach) DeepCopy() *ForEach {
	if in == nil {
		return nil
	}
	out := new(ForEach)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPDatabase) DeepCopyInto(out *GCPDatabase) {
	*out = *in
	if in.GCPConnection != nil {
		in, out := &in.GCPConnection, &out.GCPConnection
		*out = new(connection.GCPConnection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPDatabase.
func (in *GCPDatabase) DeepCopy() *GCPDatabase {
	if in == nil {
		return nil
	}
	out := new(GCPDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git) DeepCopyInto(out *Git) {
	*out = *in
	in.GitHubCheck.DeepCopyInto(&out.GitHubCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git.
func (in *Git) DeepCopy() *Git {
	if in == nil {
		return nil
	}
	out := new(Git)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCheckout) DeepCopyInto(out *GitCheckout) {
	*out = *in
	in.Username.DeepCopyInto(&out.Username)
	in.Password.DeepCopyInto(&out.Password)
	in.Certificate.DeepCopyInto(&out.Certificate)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCheckout.
func (in *GitCheckout) DeepCopy() *GitCheckout {
	if in == nil {
		return nil
	}
	out := new(GitCheckout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubCheck) DeepCopyInto(out *GitHubCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.GithubToken.DeepCopyInto(&out.GithubToken)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubCheck.
func (in *GitHubCheck) DeepCopy() *GitHubCheck {
	if in == nil {
		return nil
	}
	out := new(GitHubCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProtocolCheck) DeepCopyInto(out *GitProtocolCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Username.DeepCopyInto(&out.Username)
	in.Password.DeepCopyInto(&out.Password)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProtocolCheck.
func (in *GitProtocolCheck) DeepCopy() *GitProtocolCheck {
	if in == nil {
		return nil
	}
	out := new(GitProtocolCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTP) DeepCopyInto(out *HTTP) {
	*out = *in
	in.HTTPCheck.DeepCopyInto(&out.HTTPCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTP.
func (in *HTTP) DeepCopy() *HTTP {
	if in == nil {
		return nil
	}
	out := new(HTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheck) DeepCopyInto(out *HTTPCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
	if in.ResponseCodes != nil {
		in, out := &in.ResponseCodes, &out.ResponseCodes
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.ResponseJSONContent != nil {
		in, out := &in.ResponseJSONContent, &out.ResponseJSONContent
		*out = new(JSONCheck)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]types.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]types.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth2 != nil {
		in, out := &in.Oauth2, &out.Oauth2
		*out = new(Oauth2Config)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheck.
func (in *HTTPCheck) DeepCopy() *HTTPCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Helm) DeepCopyInto(out *Helm) {
	*out = *in
	in.HelmCheck.DeepCopyInto(&out.HelmCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Helm.
func (in *Helm) DeepCopy() *Helm {
	if in == nil {
		return nil
	}
	out := new(Helm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmCheck) DeepCopyInto(out *HelmCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(Authentication)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmCheck.
func (in *HelmCheck) DeepCopy() *HelmCheck {
	if in == nil {
		return nil
	}
	out := new(HelmCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ICMP) DeepCopyInto(out *ICMP) {
	*out = *in
	in.ICMPCheck.DeepCopyInto(&out.ICMPCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ICMP.
func (in *ICMP) DeepCopy() *ICMP {
	if in == nil {
		return nil
	}
	out := new(ICMP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ICMPCheck) DeepCopyInto(out *ICMPCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ICMPCheck.
func (in *ICMPCheck) DeepCopy() *ICMPCheck {
	if in == nil {
		return nil
	}
	out := new(ICMPCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONCheck) DeepCopyInto(out *JSONCheck) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONCheck.
func (in *JSONCheck) DeepCopy() *JSONCheck {
	if in == nil {
		return nil
	}
	out := new(JSONCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Jmeter) DeepCopyInto(out *Jmeter) {
	*out = *in
	in.JmeterCheck.DeepCopyInto(&out.JmeterCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Jmeter.
func (in *Jmeter) DeepCopy() *Jmeter {
	if in == nil {
		return nil
	}
	out := new(Jmeter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JmeterCheck) DeepCopyInto(out *JmeterCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.Jmx.DeepCopyInto(&out.Jmx)
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SystemProperties != nil {
		in, out := &in.SystemProperties, &out.SystemProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JmeterCheck.
func (in *JmeterCheck) DeepCopy() *JmeterCheck {
	if in == nil {
		return nil
	}
	out := new(JmeterCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Junit) DeepCopyInto(out *Junit) {
	*out = *in
	in.JunitCheck.DeepCopyInto(&out.JunitCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Junit.
func (in *Junit) DeepCopy() *Junit {
	if in == nil {
		return nil
	}
	out := new(Junit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JunitCheck) DeepCopyInto(out *JunitCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Artifacts != nil {
		in, out := &in.Artifacts, &out.Artifacts
		*out = make([]Artifact, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JunitCheck.
func (in *JunitCheck) DeepCopy() *JunitCheck {
	if in == nil {
		return nil
	}
	out := new(JunitCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes) DeepCopyInto(out *Kubernetes) {
	*out = *in
	in.KubernetesCheck.DeepCopyInto(&out.KubernetesCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes.
func (in *Kubernetes) DeepCopy() *Kubernetes {
	if in == nil {
		return nil
	}
	out := new(Kubernetes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesCheck) DeepCopyInto(out *KubernetesCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	out.Namespace = in.Namespace
	out.Resource = in.Resource
	if in.KubeConfig != nil {
		in, out := &in.KubeConfig, &out.KubeConfig
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesCheck.
func (in *KubernetesCheck) DeepCopy() *KubernetesCheck {
	if in == nil {
		return nil
	}
	out := new(KubernetesCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesResourceCheck) DeepCopyInto(out *KubernetesResourceCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.StaticResources != nil {
		in, out := &in.StaticResources, &out.StaticResources
		*out = make([]unstructured.Unstructured, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]unstructured.Unstructured, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make([]KubernetesResourceChecks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.CheckRetries.DeepCopyInto(&out.CheckRetries)
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	in.WaitFor.DeepCopyInto(&out.WaitFor)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesResourceCheck.
func (in *KubernetesResourceCheck) DeepCopy() *KubernetesResourceCheck {
	if in == nil {
		return nil
	}
	out := new(KubernetesResourceCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesResourceCheckRetries) DeepCopyInto(out *KubernetesResourceCheckRetries) {
	*out = *in
	if in.parsedDelay != nil {
		in, out := &in.parsedDelay, &out.parsedDelay
		*out = new(timex.Duration)
		**out = **in
	}
	if in.parsedTimeout != nil {
		in, out := &in.parsedTimeout, &out.parsedTimeout
		*out = new(timex.Duration)
		**out = **in
	}
	if in.parsedInterval != nil {
		in, out := &in.parsedInterval, &out.parsedInterval
		*out = new(timex.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesResourceCheckRetries.
func (in *KubernetesResourceCheckRetries) DeepCopy() *KubernetesResourceCheckRetries {
	if in == nil {
		return nil
	}
	out := new(KubernetesResourceCheckRetries)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesResourceCheckWaitFor) DeepCopyInto(out *KubernetesResourceCheckWaitFor) {
	*out = *in
	if in.parsedTimeout != nil {
		in, out := &in.parsedTimeout, &out.parsedTimeout
		*out = new(timex.Duration)
		**out = **in
	}
	if in.parsedInterval != nil {
		in, out := &in.parsedInterval, &out.parsedInterval
		*out = new(timex.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesResourceCheckWaitFor.
func (in *KubernetesResourceCheckWaitFor) DeepCopy() *KubernetesResourceCheckWaitFor {
	if in == nil {
		return nil
	}
	out := new(KubernetesResourceCheckWaitFor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesResourceChecks) DeepCopyInto(out *KubernetesResourceChecks) {
	*out = *in
	in.CanarySpec.DeepCopyInto(&out.CanarySpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesResourceChecks.
func (in *KubernetesResourceChecks) DeepCopy() *KubernetesResourceChecks {
	if in == nil {
		return nil
	}
	out := new(KubernetesResourceChecks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LDAP) DeepCopyInto(out *LDAP) {
	*out = *in
	in.LDAPCheck.DeepCopyInto(&out.LDAPCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LDAP.
func (in *LDAP) DeepCopy() *LDAP {
	if in == nil {
		return nil
	}
	out := new(LDAP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LDAPCheck) DeepCopyInto(out *LDAPCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LDAPCheck.
func (in *LDAPCheck) DeepCopy() *LDAPCheck {
	if in == nil {
		return nil
	}
	out := new(LDAPCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Labels) DeepCopyInto(out *Labels) {
	{
		in := &in
		*out = make(Labels, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Labels.
func (in Labels) DeepCopy() Labels {
	if in == nil {
		return nil
	}
	out := new(Labels)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mongo) DeepCopyInto(out *Mongo) {
	*out = *in
	in.MongoDBCheck.DeepCopyInto(&out.MongoDBCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mongo.
func (in *Mongo) DeepCopy() *Mongo {
	if in == nil {
		return nil
	}
	out := new(Mongo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBCheck) DeepCopyInto(out *MongoDBCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBCheck.
func (in *MongoDBCheck) DeepCopy() *MongoDBCheck {
	if in == nil {
		return nil
	}
	out := new(MongoDBCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MsSQL) DeepCopyInto(out *MsSQL) {
	*out = *in
	in.MssqlCheck.DeepCopyInto(&out.MssqlCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MsSQL.
func (in *MsSQL) DeepCopy() *MsSQL {
	if in == nil {
		return nil
	}
	out := new(MsSQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MssqlCheck) DeepCopyInto(out *MssqlCheck) {
	*out = *in
	in.SQLCheck.DeepCopyInto(&out.SQLCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MssqlCheck.
func (in *MssqlCheck) DeepCopy() *MssqlCheck {
	if in == nil {
		return nil
	}
	out := new(MssqlCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlCheck) DeepCopyInto(out *MysqlCheck) {
	*out = *in
	in.SQLCheck.DeepCopyInto(&out.SQLCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlCheck.
func (in *MysqlCheck) DeepCopy() *MysqlCheck {
	if in == nil {
		return nil
	}
	out := new(MysqlCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace) DeepCopyInto(out *Namespace) {
	*out = *in
	in.NamespaceCheck.DeepCopyInto(&out.NamespaceCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace.
func (in *Namespace) DeepCopy() *Namespace {
	if in == nil {
		return nil
	}
	out := new(Namespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceCheck) DeepCopyInto(out *NamespaceCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.NamespaceLabels != nil {
		in, out := &in.NamespaceLabels, &out.NamespaceLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NamespaceAnnotations != nil {
		in, out := &in.NamespaceAnnotations, &out.NamespaceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExpectedHTTPStatuses != nil {
		in, out := &in.ExpectedHTTPStatuses, &out.ExpectedHTTPStatuses
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceCheck.
func (in *NamespaceCheck) DeepCopy() *NamespaceCheck {
	if in == nil {
		return nil
	}
	out := new(NamespaceCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelector) DeepCopyInto(out *NamespaceSelector) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelector.
func (in *NamespaceSelector) DeepCopy() *NamespaceSelector {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2Config) DeepCopyInto(out *Oauth2Config) {
	*out = *in
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2Config.
func (in *Oauth2Config) DeepCopy() *Oauth2Config {
	if in == nil {
		return nil
	}
	out := new(Oauth2Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchCheck) DeepCopyInto(out *OpenSearchCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchCheck.
func (in *OpenSearchCheck) DeepCopy() *OpenSearchCheck {
	if in == nil {
		return nil
	}
	out := new(OpenSearchCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParentLookup) DeepCopyInto(out *ParentLookup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParentLookup.
func (in *ParentLookup) DeepCopy() *ParentLookup {
	if in == nil {
		return nil
	}
	out := new(ParentLookup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pod) DeepCopyInto(out *Pod) {
	*out = *in
	in.PodCheck.DeepCopyInto(&out.PodCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pod.
func (in *Pod) DeepCopy() *Pod {
	if in == nil {
		return nil
	}
	out := new(Pod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodCheck) DeepCopyInto(out *PodCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.ExpectedHTTPStatuses != nil {
		in, out := &in.ExpectedHTTPStatuses, &out.ExpectedHTTPStatuses
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodCheck.
func (in *PodCheck) DeepCopy() *PodCheck {
	if in == nil {
		return nil
	}
	out := new(PodCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Postgres) DeepCopyInto(out *Postgres) {
	*out = *in
	in.PostgresCheck.DeepCopyInto(&out.PostgresCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Postgres.
func (in *Postgres) DeepCopy() *Postgres {
	if in == nil {
		return nil
	}
	out := new(Postgres)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresCheck) DeepCopyInto(out *PostgresCheck) {
	*out = *in
	in.SQLCheck.DeepCopyInto(&out.SQLCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresCheck.
func (in *PostgresCheck) DeepCopy() *PostgresCheck {
	if in == nil {
		return nil
	}
	out := new(PostgresCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Prometheus) DeepCopyInto(out *Prometheus) {
	*out = *in
	in.PrometheusCheck.DeepCopyInto(&out.PrometheusCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Prometheus.
func (in *Prometheus) DeepCopy() *Prometheus {
	if in == nil {
		return nil
	}
	out := new(Prometheus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusCheck) DeepCopyInto(out *PrometheusCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusCheck.
func (in *PrometheusCheck) DeepCopy() *PrometheusCheck {
	if in == nil {
		return nil
	}
	out := new(PrometheusCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Properties) DeepCopyInto(out *Properties) {
	{
		in := &in
		*out = make(Properties, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Properties.
func (in Properties) DeepCopy() Properties {
	if in == nil {
		return nil
	}
	out := new(Properties)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Property) DeepCopyInto(out *Property) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(int64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int64)
		**out = **in
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make([]types.Link, len(*in))
		copy(*out, *in)
	}
	if in.Lookup != nil {
		in, out := &in.Lookup, &out.Lookup
		*out = new(CanarySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigLookup != nil {
		in, out := &in.ConfigLookup, &out.ConfigLookup
		*out = new(ConfigLookup)
		(*in).DeepCopyInto(*out)
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(Template)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Property.
func (in *Property) DeepCopy() *Property {
	if in == nil {
		return nil
	}
	out := new(Property)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redis) DeepCopyInto(out *Redis) {
	*out = *in
	in.RedisCheck.DeepCopyInto(&out.RedisCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redis.
func (in *Redis) DeepCopy() *Redis {
	if in == nil {
		return nil
	}
	out := new(Redis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisCheck) DeepCopyInto(out *RedisCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.Connection.DeepCopyInto(&out.Connection)
	if in.DB != nil {
		in, out := &in.DB, &out.DB
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisCheck.
func (in *RedisCheck) DeepCopy() *RedisCheck {
	if in == nil {
		return nil
	}
	out := new(RedisCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Relatable) DeepCopyInto(out *Relatable) {
	*out = *in
	if in.Relationships != nil {
		in, out := &in.Relationships, &out.Relationships
		*out = new(CheckRelationship)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Relatable.
func (in *Relatable) DeepCopy() *Relatable {
	if in == nil {
		return nil
	}
	out := new(Relatable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelationshipSpec) DeepCopyInto(out *RelationshipSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelationshipSpec.
func (in *RelationshipSpec) DeepCopy() *RelationshipSpec {
	if in == nil {
		return nil
	}
	out := new(RelationshipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSelector) DeepCopyInto(out *ResourceSelector) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSelector.
func (in *ResourceSelector) DeepCopy() *ResourceSelector {
	if in == nil {
		return nil
	}
	out := new(ResourceSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Restic) DeepCopyInto(out *Restic) {
	*out = *in
	in.ResticCheck.DeepCopyInto(&out.ResticCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Restic.
func (in *Restic) DeepCopy() *Restic {
	if in == nil {
		return nil
	}
	out := new(Restic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResticCheck) DeepCopyInto(out *ResticCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResticCheck.
func (in *ResticCheck) DeepCopy() *ResticCheck {
	if in == nil {
		return nil
	}
	out := new(ResticCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3) DeepCopyInto(out *S3) {
	*out = *in
	in.S3Check.DeepCopyInto(&out.S3Check)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3.
func (in *S3) DeepCopy() *S3 {
	if in == nil {
		return nil
	}
	out := new(S3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Check) DeepCopyInto(out *S3Check) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	in.S3Connection.DeepCopyInto(&out.S3Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Check.
func (in *S3Check) DeepCopy() *S3Check {
	if in == nil {
		return nil
	}
	out := new(S3Check)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLCheck) DeepCopyInto(out *SQLCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	in.Connection.DeepCopyInto(&out.Connection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLCheck.
func (in *SQLCheck) DeepCopy() *SQLCheck {
	if in == nil {
		return nil
	}
	out := new(SQLCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Selector) DeepCopyInto(out *Selector) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Selector.
func (in *Selector) DeepCopy() *Selector {
	if in == nil {
		return nil
	}
	out := new(Selector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrvReply) DeepCopyInto(out *SrvReply) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrvReply.
func (in *SrvReply) DeepCopy() *SrvReply {
	if in == nil {
		return nil
	}
	out := new(SrvReply)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCP) DeepCopyInto(out *TCP) {
	*out = *in
	in.TCPCheck.DeepCopyInto(&out.TCPCheck)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCP.
func (in *TCP) DeepCopy() *TCP {
	if in == nil {
		return nil
	}
	out := new(TCP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheck) DeepCopyInto(out *TCPCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheck.
func (in *TCPCheck) DeepCopy() *TCPCheck {
	if in == nil {
		return nil
	}
	out := new(TCPCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	in.CA.DeepCopyInto(&out.CA)
	in.Cert.DeepCopyInto(&out.Cert)
	in.Key.DeepCopyInto(&out.Key)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Templatable) DeepCopyInto(out *Templatable) {
	*out = *in
	out.Test = in.Test
	out.Display = in.Display
	out.Transform = in.Transform
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Templatable.
func (in *Templatable) DeepCopy() *Templatable {
	if in == nil {
		return nil
	}
	out := new(Templatable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Test) DeepCopyInto(out *Test) {
	*out = *in
	out.Template = in.Template
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Test.
func (in *Test) DeepCopy() *Test {
	if in == nil {
		return nil
	}
	out := new(Test)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topology) DeepCopyInto(out *Topology) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topology.
func (in *Topology) DeepCopy() *Topology {
	if in == nil {
		return nil
	}
	out := new(Topology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Topology) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyList) DeepCopyInto(out *TopologyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Topology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyList.
func (in *TopologyList) DeepCopy() *TopologyList {
	if in == nil {
		return nil
	}
	out := new(TopologyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopologyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologySpec) DeepCopyInto(out *TopologySpec) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(Template)
		**out = **in
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(Properties, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]types.ConfigQuery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.GroupBy.DeepCopyInto(&out.GroupBy)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologySpec.
func (in *TopologySpec) DeepCopy() *TopologySpec {
	if in == nil {
		return nil
	}
	out := new(TopologySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyStatus) DeepCopyInto(out *TopologyStatus) {
	*out = *in
	if in.PersistedID != nil {
		in, out := &in.PersistedID, &out.PersistedID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyStatus.
func (in *TopologyStatus) DeepCopy() *TopologyStatus {
	if in == nil {
		return nil
	}
	out := new(TopologyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyTagSelector) DeepCopyInto(out *TopologyTagSelector) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyTagSelector.
func (in *TopologyTagSelector) DeepCopy() *TopologyTagSelector {
	if in == nil {
		return nil
	}
	out := new(TopologyTagSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VarSource) DeepCopyInto(out *VarSource) {
	*out = *in
	if in.FieldRef != nil {
		in, out := &in.FieldRef, &out.FieldRef
		*out = new(corev1.ObjectFieldSelector)
		**out = **in
	}
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(corev1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(corev1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VarSource.
func (in *VarSource) DeepCopy() *VarSource {
	if in == nil {
		return nil
	}
	out := new(VarSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookCheck) DeepCopyInto(out *WebhookCheck) {
	*out = *in
	in.Description.DeepCopyInto(&out.Description)
	out.Templatable = in.Templatable
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(types.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookCheck.
func (in *WebhookCheck) DeepCopy() *WebhookCheck {
	if in == nil {
		return nil
	}
	out := new(WebhookCheck)
	in.DeepCopyInto(out)
	return out
}
