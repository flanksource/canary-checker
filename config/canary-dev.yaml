apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    meta.helm.sh/release-name: canary-checker
    meta.helm.sh/release-namespace: canary-checker
  labels:
    app.kubernetes.io/instance: canary-checker
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: canary-checker
    app.kubernetes.io/version: master
    control-plane: canary-checker
    helm.sh/chart: canary-checker-0.0.0
  name: canary-checker
  namespace: canary-checker
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: canary-checker
      app.kubernetes.io/name: canary-checker
      control-plane: canary-checker
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: canary-checker
        app.kubernetes.io/name: canary-checker
        control-plane: canary-checker
    spec:
      containers:
      - args:
        - operator
        - -v
        - --httpPort
        - "8080"
        - --disable-postgrest=false
        - --db-migrations=true
        - --cache-timeout=90
        - --default-window=1h
        - --check-status-retention-period=180
        - --check-retention-period=7
        - --canary-retention-period=7
        command:
        - /app/canary-checker
        env:
        - name: PING_MODE
          value: privileged
        - name: DB_URL
          value: embedded:///opt/database/
        image: docker.io/flanksource/canary-checker-full:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: canary-checker
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - CAP_NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/podinfo
          name: podinfo
        - mountPath: /app/canary-checker.properties
          name: config
          subPath: canary-checker.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      serviceAccount: canary-checker-sa
      serviceAccountName: canary-checker-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - downwardAPI:
          defaultMode: 420
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels
            path: labels
        name: podinfo
      - configMap:
          defaultMode: 420
          name: canary-checker
        name: config
